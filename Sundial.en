% * Projekt Untere Bütschen
>e:=23.44°; Dek7:=asin(sin(e)*sin([-90:30:90]°)); deg(Dek7)
[-23.44,  -20.151,  -11.4723,  0,  11.4723,  20.151,  23.44]
>lat:= 47.41265°; lon:= -7.6958595°; wa:= 18.9°;
% Erhebungs-, Substilarwinkel sowie Stundenwinkel-Differenz
>g:=asin(cos(lat)*cos(wa)); f:=atan2(tan(lat),-sin(wa)); ...
>tsub:=atan2(sin(lat),tan(wa));
>[deg(g), deg(f), deg(tsub)/15]
[39.8089,  -16.5796,  1.66266]
% tau mit Mittlerer Ortszeit, Fusspunkt-Koordinaten
>tau:=(15+deg(lon)+[-120:15:150])°; PL:=80; PH=PL*sin(g);  ...
>F:=PH*[sin(f),cos(f)]/tan(g)
[-17.5359,  58.8997]
>load "astro.e";
>now=day(2016,4,21,5,50)
5954.74305556
>function Dekli(t=now) ....
$h=sun(t);
$return h[2];
$endfunction
% Wandflucht morgens
>{t,d}=HorAeq(-90+deg(wa),20,); [t/15, d]
[-4.19125,  2.62685]
>t1=secant("Dekli(x)-d",day(2017,3,24)); t2=secant("Dekli(x)-d",day(2017,9,20));
>printday(t1), printday(t2)
2017-03-27 02:37:19
2017-09-16 01:30:21
% Wandflucht abends
>{t,d}=HorAeq(90+deg(wa),9,); [t/15, d]
[6.52675,  19.3705]
>t1=secant("Dekli(x)-d",day(2017,5,21)); t2=secant("Dekli(x)-d",day(2017,7,21));
>printday(t1), printday(t2)
2017-05-17 05:31:57
2017-07-26 06:58:02
>function ZifferblattMatrix(f=lat,a=wa,i=0°)
$Z=zeros(3,3);
$Z[1,1]=sin(f)*sin(a); Z[1,2]=-cos(a); Z[1,3]=-cos(f)*sin(a);
$Z[2,1]=cos(f)*cos(i)-sin(f)*cos(a)*sin(i); Z[2,2]=-sin(a)*sin(i);
$Z[2,3]=cos(f)*cos(a)*sin(i)+sin(f)*cos(i);
$$Z[3,1]=cos(f)*sin(i)+sin(f)*cos(a)*cos(i); Z[3,2]=sin(a)*cos(i);
$Z[3,3]=-cos(f)*cos(a)*cos(i)+sin(f)*sin(i);
$$return Z
$endfunction
>D = ZifferblattMatrix()
     0.238483     -0.946085     -0.219199 
     0.676713             0      0.736247 
     0.696552      0.323917     -0.640229 
>{theta,psi,r}:=polar(D[1,3],D[2,3],D[3,3]); [r, deg(theta), deg(psi)]
[1,  106.58,  -39.8089]
% Umwandlung in kartesische Koordinaten
>function KartKoo(tau,delta)
$## wandelt Horizontal- und Vertikalwinkel in kart. Koordinaten um
$return cos(delta)*cos(tau)_cos(delta)*sin(tau)_sin(delta);
$endfunction
>n:=size(Dek7)[2]; Mat:=[]; for i=1:n; Z:=(D.KartKoo(tau,Dek7[i]))'; ...
>keep:= nonzeros(Z[,3]>0); Z:=Z[keep]; z:=-PH*Z[,1:2]/Z[,3]; ...
>Mat:=Mat_(i|tau[keep]'|z|Z); end;
% Topografischer Horizont
>..Sky:=readmatrix("Buetschen_Skyplot.rpt"); ...
>open("Horizont.csv","w"); Sky:=Sky[55:146]; Sky[,1]:=Sky[,1]-180; ...
>Dhor:= ZifferblattMatrix(90°,,); ...
>Z:=(Dhor.KartKoo(Sky[,1]°',Sky[,2]°'))'; z:=-PH*Z[,1:2]/Z[,3]; ...
>writematrix(Sky[,1]|Z|z,separator=";"); 
% Horizontmarkierungen
>..Z:=(Dhor.KartKoo([-60:15:105]°,0))'; z:=-PH*Z[,1:2]/Z[,3]; ...
>writematrix([-60:15:105]'|Z|z,separator=";"); ...
>close();
% Transformation auf Substilare
%% und Achsabschnitte
>Z:=(D.KartKoo(tsub,Dek7))'; z:=-PH*Z[,1:2]/Z[,3]; ...
>X:=Mat[,[3:4]]-z[4];
>Df:=[cos(f),sin(f);-sin(f),cos(f)]
     0.958424     -0.285347 
     0.285347      0.958424 
>Mat:=Mat|(X.Df); writematrix(Mat,"Vertikaluhr.csv",separator=";");
>AxeSub:=Df'.(z-z[4])';
% Parameterschätzung
>Par=[]; function hyperbola(x,p):=p[1]/p[2]*sqrt(x^2+p[2]^2);
>for i=1:n; xdata:=Mat[nonzeros(Mat[,1]==i),8]';  ...
>ydata:=Mat[nonzeros(Mat[,1]==i),9]'; ...
>p:=modelfit("hyperbola",[27.6,54],xdata,ydata); ...
>fs:=ydata-hyperbola(xdata,p);  ...
>dev:=sqrt(sum(fs^2)/(size(xdata)[2]-size(p)[2])); ...
>Par:=Par_(p|dev); end;
>Par:=Par'; Par:=Par_(sign(Par[1])*sqrt(Par[1]^2+Par[2]^2)); Par:=Par_(Par[2]^2/Par[1]);  ...
>Par:=Par_AxeSub[2]; Par:=Par'; 
>writetable(Par,labc=["a","b","Dev","e","p","AxeSub"]);
         a         b       Dev         e         p    AxeSub
     24.55     41.84      4.32     48.51     71.32     27.64
     21.59     43.07      4.57     48.18     85.93     24.39
     14.61     55.88      0.56     57.75    213.63     15.07
         0     77.34         0     77.341.11742e+017         0
    -21.85     80.77      0.87    -83.67   -298.53     -21.2
    -46.98     89.01      1.24   -100.65   -168.65    -45.88
     -61.1     96.68      2.57   -114.37   -152.98    -58.92
>plot2d(Mat[,8]',Mat[,9]',r=250,style="...",>points); ...
>plot2d(AxeSub[1],AxeSub[2],>points,color=red,style="+",>add); ...
>plot2d(zeros(n),Par[,4]',>points,>add):
 %image% Sundial-001.png
>load "geometry.e"
Numerical and symbolic geometry.
>p=lineWithDirection(F,[cos(lat),sin(lat)])
[-0.736247,  0.676713,  52.769]
>h=lineThrough([0,0],[1000,0]);
>H=lineIntersection(p,h)
[-71.673,  0]
>q=lineWithDirection(H,[sin(lat),-cos(lat)]);
>M=lineIntersection(q,lineWithDirection(F,[0,-100]))
[-17.5359,  -49.7595]
>K=circleWithCenter(M,distance(M,H))
[-17.5359,  -49.7595,  73.5312]
>s=lineThrough(F,[0,0])
[58.8997,  17.5359,  0]
>Z=lineCircleIntersections(s,K)
[31.206,  -104.815]
% Darstellung
>tm=Mat[nonzeros(Mat[,1]==7),[3:4]]';
>plot2d(tm[1],tm[2],a=-200,b=200,c=-350,d=50,>points,style="...",color=red);
>for i=1:n; tm:=Mat[nonzeros(Mat[,1]==i),[3:4]]'; plot2d(tm[1],tm[2],>add); end;
>plotPoint(F,"F"); plotPoint(M,"M"); plotPoint(H,"H"); plotPoint(Z,"Z"); plotSegment(F,[0,0],""):
 %image% Sundial-002.png
>
