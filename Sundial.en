>{theta,psi,r}:=polar(1,-2,-1); [r, deg(theta), deg(psi)]
[2.44949,  -63.4349,  -24.0948]
>{x,y,z}:=rect(theta,psi,r); [x, y, z]
[1,  -2,  -1]
% * Berechnungsgrundlagen Bütschen
>e:=23.44°; Dek7:=asin(sin(e)*sin([-90:30:90]°)); deg(Dek7)
[-23.44,  -20.151,  -11.4723,  0,  11.4723,  20.151,  23.44]
>lat:= 47.41265°; lon:= -7.6958595°; wa:= 18.9°;
% Erhebungs-, Substilarwinkel sowie Stundenwinkel-Differenz
>g:=asin(cos(lat)*cos(wa)); f:=atan2(tan(lat),-sin(wa)); ...
>tsub:=atan2(sin(lat),tan(wa));
>[deg(g), deg(f), deg(tsub)/15]
[39.8089,  -16.5796,  1.66266]
>tau:=[-120:15:150]°; PL:=80; PH=PL*sin(g); PH*[sin(f),cos(f)]/tan(g)
[-17.5359,  58.8997]
>function HorAeq(A,h,f=lat)
$A=rad(A); h=rad(h); 
$d=asin(-cos(h)*cos(A)*cos(f)+sin(h)*sin(f)); ...
$t=atan2(cos(h)*cos(A)*sin(f)+sin(h)*cos(f),cos(h)*sin(A));
$return {deg(t),deg(d)};
$endfunction
>function AeqHor(t,d,f=lat)
$t=rad(t); d=rad(d);
$h=asin(sin(f)*sin(d)+cos(f)*cos(d)*cos(t));
$A=atan2(sin(f)*cos(t)-cos(f)*tan(d),sin(t));
$return {deg(A),deg(h)};
$endfunction
>load "D:\Euler x64\util\astro.e";
>now=day(2016,4,21,5,50)
5954.74305556
>function Dekli(t=now) ....
$h=sun(t);
$return h[2];
$endfunction
>{t,d}=HorAeq(-71.1,20,); [t/15, d]
[-4.19125,  2.62685]
>t=secant("Dekli(x)-d",day(2017,3,24)); printday(t)
2017-03-27 02:37:19
>t=secant("Dekli(x)-d",day(2017,9,20)); printday(t)
2017-09-16 01:30:21
>function ZifferblattMatrix(f=lat,a=wa,i=0°)
$Z=zeros(3,3);
$Z[1,1]=sin(f)*sin(a); Z[1,2]=-cos(a); Z[1,3]=-cos(f)*sin(a);
$Z[2,1]=cos(f)*cos(i)-sin(f)*cos(a)*sin(i); Z[2,2]=-sin(a)*sin(i); Z[2,3]=cos(f)*cos(a)*sin(i)+sin(f)*cos(i);
$$Z[3,1]=cos(f)*sin(i)+sin(f)*cos(a)*cos(i); Z[3,2]=sin(a)*cos(i); Z[3,3]=-cos(f)*cos(a)*cos(i)+sin(f)*sin(i);
$$return Z
$endfunction
>D:=ZifferblattMatrix()
     0.238483     -0.946085     -0.219199 
     0.676713             0      0.736247 
     0.696552      0.323917     -0.640229 
>{theta,psi,r}:=polar(D[1,3],D[2,3],D[3,3]); [r, deg(theta), deg(psi)]
[1,  106.58,  -39.8089]
% Umwandlung in kartesische Koordinaten
>function KartKoo(tau,delta)
$## wandelt Horizontal- und Vertikalwinkel in kart. Koordinaten in der Einheitskugel um
$return cos(delta)*cos(tau)_cos(delta)*sin(tau)_sin(delta);
$endfunction
% Drehung in Koord.system (Z=X,Y,Z) und 
%% Projektion auf Zifferblat (z=x,y) 
>open("Vertikaluhr.csv","w");
>for i=1:size(Dek7)[2]; Z:=(D.KartKoo(tau,Dek7[i]))'; z:=-PH*Z[,1:2]/Z[,3]; writematrix([-8:10]'|Z|z,separator=";"); end;
>close();
% Topografischer Horizont
>Sky:=readmatrix("Buetschen_Skyplot.rpt"); 
>open("Horizont.csv","w"); Sky:=Sky[55:146]; Sky[,1]:=Sky[,1]-180;
>Dhor:= ZifferblattMatrix(90°,,); 
>Z:=(Dhor.KartKoo(Sky[,1]°',Sky[,2]°'))'; z:=-PH*Z[,1:2]/Z[,3];
>writematrix(Sky[,1]|Z|z,separator=";"); 
% Horizontmarkierungen
>Z:=(Dhor.KartKoo([-60:15:105]°,0))'; z:=-PH*Z[,1:2]/Z[,3];
>writematrix([-60:15:105]'|Z|z,separator=";");
>close();
>
